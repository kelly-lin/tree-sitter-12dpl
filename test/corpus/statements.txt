==================================
Function Statements
==================================

Integer get_x() {
  return 1;
}

---

(source_file
  (function_definition
    (primitive_type)
    (function_declarator (identifier) (parameter_list))
    (compound_statement
      (return_statement (number_literal)))))

============================================
If statements
============================================

Integer main() {
  if (a)
    return 1;

  if (!a) {
    return 2;
  } else {
    return 3;
  }
}

---

(source_file
  (function_definition
    (primitive_type)
    (function_declarator (identifier) (parameter_list))
    (compound_statement
      (if_statement (parenthesized_expression (identifier))
        (return_statement (number_literal)))
      (if_statement (parenthesized_expression (unary_expression (identifier)))
        (compound_statement
          (return_statement (number_literal)))
        (compound_statement
          (return_statement (number_literal)))))))

============================================
For loops
============================================

Integer main() {
  for (Integer i = 0; i < 5; i++) {
    return 2;
  }
}

---

(source_file
  (function_definition
    (primitive_type)
    (function_declarator (identifier) (parameter_list))
    (compound_statement
      (for_statement
        (declaration (primitive_type) (init_declarator (identifier) (number_literal)))
        (binary_expression (identifier) (number_literal))
        (update_expression (identifier))
        (compound_statement (return_statement (number_literal)))))))

============================================
While loops
============================================

Integer main() {
  while (x)
    Print("hi");
}

---

(source_file
  (function_definition
    (primitive_type)
    (function_declarator (identifier) (parameter_list))
    (compound_statement
      (while_statement (parenthesized_expression (identifier))
        (expression_statement (call_expression
          (identifier)
          (argument_list (string_literal))))))))
